node {
    def mvnHome = tool name: 'maven3', type: 'maven'
    stage('SCM Checkout'){
        script{
            try{
                git 'https://github.com/hemersonallan/APIProducts'
                echo 'Projeto Clonado'
             }catch (Exception e) {
                echo 'Erro ao Clonar: ' + e.toString()
             }   
        }
        echo 'Estagio 1 Finalizado !'
    }
    stage('Stop Http servers'){
         script{
            try{
                sh 'fuser -n tcp -k 8081'
                echo 'Processos Http finalizados !!!' 
             }catch (Exception e) {
                echo 'Erro finalizando Http: ' + e.toString()
             }                
        }
        echo 'Estagio 2 Finalizado'
    }
    stage("Compile Package"){
        dir('/var/lib/jenkins/workspace/DEV-project/APIProducts/productsapi') {
            sh "${mvnHome}/bin/mvn clean package"
            echo 'Estagio 3 Finalizado'
        }
    }
/*    stage('SonarQube Analise'){
        dir('/var/lib/jenkins/workspace/DEV-project/APIProducts/productsapi') {
            withSonarQubeEnv('SONAR_LOCAL'){
                sh "${mvnHome}/bin/mvn sonar:sonar"
                echo 'Estagio 4 Finalizado'
            }
        }   
    }
*/  stage('SonarQube Analysis') {
        def mvn = tool 'maven3';
        withSonarQubeEnv() {
          sh "${mvn}/bin/mvn clean verify sonar:sonar"
        }
    }
    
    stage('Deploying the Project'){
        dir('/var/lib/jenkins/workspace/DEV-project/APIProducts/productsapi/target/') { 
            withEnv(['JENKINS_NODE_COOKIE=dontkill']) {
                //sh "nohup ${mvnHome}/bin/mvn spring-boot:run -Dserver.port=8081  -DskipTests &"
                sh 'nohup java -jar productsapi-0.0.1-SNAPSHOT.jar -Dserver.port=8081  -DskipTests &'
                sleep(15)
                echo 'Estagio 5 Finalizado'    
            }
        }
    }
    stage('Observability'){
        sh 'curl -i -l http://3.141.42.5:8081'
        echo 'Observability ok!!!'
        echo 'Estagio 6 Finalizado !' 
    }   
}    
