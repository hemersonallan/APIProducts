node {
    stage('SCM Checkout'){
        script{
            try{
                git 'https://github.com/hemersonallan/APIProducts'
                echo 'Projeto Clonado'
             }catch (Exception e) {
                echo 'Erro ao Clonar : ' + e.toString()
             }   
             echo 'Estagio 1 Finalizado'
        }
    }
    stage('Stop Http servers'){
         script{
            try{
                sh 'fuser -n tcp -k 8081'
                echo 'Processos Http finalizados !!!' 
             }catch (Exception e) {
                echo 'Erro finalizando processos Http: ' + e.toString()
             }   
             echo 'Estagio 2 Finalizado'
        }       
    }
    stage("Compile Package"){
        def mvnHome = tool name: 'maven3', type: 'maven'
        dir('/var/lib/jenkins/workspace/DEV-project/APIProducts/productsapi') {
            sh "${mvnHome}/bin/mvn clean package"
            echo 'Estagio 3 Finalizado'
        }
    }
    stage('Deploying the Project'){
        withEnv(['JENKINS_NODE_COOKIE=dontkill']) {
            sh "nohup ${mvnHome}/bin/mvn spring-boot:run -Dserver.port=8081  -DskipTests &"
            echo 'Estagio 4 Finalizado'    
        }
    }    
}    
 /*   
    stage("Deploy"){
    dir('/var/lib/jenkins/workspace/DEV-project/APIProducts/productsapi') {
        
                    withEnv(['JENKINS_NODE_COOKIE=dontkill']) {
                        sh 'chmod +x mvnw'
                        sh 'nohup ./mvnw spring-boot:run -Dserver.port=8081  -DskipTests &'
                        echo 'Deploy Realizado com Sucesso!!!'
                        sleep(15)
                    }
                }
            }      
        }               
        stage('Observability'){
            steps{
                sh 'curl -i -l http://3.133.161.133:8081'
                echo 'Observability ok!!!'
            }
        }
    }    
}
*/

